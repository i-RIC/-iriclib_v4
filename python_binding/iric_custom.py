# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

import numpy as np
from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _iric
else:
    import _iric

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)

def _checkErrorCode(ier):
    if ier == 0: return

    raise Exception('Error code ier={0}'.format(ier))

CG_MODE_READ = 0
CG_MODE_WRITE = 1
CG_MODE_MODIFY = 2

IRIC_MODE_READ = 0
IRIC_MODE_WRITE = 1
IRIC_MODE_MODIFY = 2

IRIC_OPTION_CANCEL = 1
IRIC_OPTION_DIVIDESOLUTIONS = 2
IRIC_OPTION_STDSOLUTION = 3

class IntArrayContainer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, size):
        _iric.IntArrayContainer_swiginit(self, _iric.new_IntArrayContainer(size))
    __swig_destroy__ = _iric.delete_IntArrayContainer

    def size(self):
        return _iric.IntArrayContainer_size(self)

    def value(self, index):
        return _iric.IntArrayContainer_value(self, index)

    def setValue(self, index, v):
        return _iric.IntArrayContainer_setValue(self, index, v)

    def pointer(self):
        return _iric.IntArrayContainer_pointer(self)

    def get(self):
        ret = np.zeros(self.size(), dtype=np.int32)
        for i in range(self.size()):
            ret[i] = self.value(i)
        return ret

    def set(self, vals):
        for i in range(self.size()):
            self.setValue(i, int(vals[i]))

# Register IntArrayContainer in _iric:
_iric.IntArrayContainer_swigregister(IntArrayContainer)

class RealArrayContainer(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, size):
        _iric.RealArrayContainer_swiginit(self, _iric.new_RealArrayContainer(size))
    __swig_destroy__ = _iric.delete_RealArrayContainer

    def size(self):
        return _iric.RealArrayContainer_size(self)

    def value(self, index):
        return _iric.RealArrayContainer_value(self, index)

    def setValue(self, index, v):
        return _iric.RealArrayContainer_setValue(self, index, v)

    def pointer(self):
        return _iric.RealArrayContainer_pointer(self)

    def get(self):
        ret = np.zeros(self.size(), dtype=np.float64)
        for i in range(self.size()):
            ret[i] = self.value(i)
        return ret

    def set(self, vals):
        for i in range(self.size()):
            self.setValue(i, float(vals[i]))

# Register RealArrayContainer in _iric:
_iric.RealArrayContainer_swigregister(RealArrayContainer)

def cg_open(name, mode):
    ier, fin = _iric.cg_open(name, mode)
    _checkErrorCode(ier)
    return fin

def cg_close(fin):
    ier = _iric.cg_close(fin)
    _checkErrorCode(ier)

# from iriclib_bc.h
def cg_iRIC_Read_BC_Count_WithGridId_Mul(fid, gid, type):
	num = _iric.cg_iRIC_Read_BC_Count_WithGridId_Mul(fid, gid, type)
	return num

def cg_iRIC_Read_BC_IndicesSize_WithGridId_Mul(fid, gid, type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize_WithGridId_Mul(fid, gid, type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_IndicesSize2_WithGridId_Mul(fid, gid, type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize2_WithGridId_Mul(fid, gid, type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_Integer_WithGridId_Mul(fid, gid, type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Integer_WithGridId_Mul(fid, gid, type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_Real_WithGridId_Mul(fid, gid, type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Real_WithGridId_Mul(fid, gid, type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_String_WithGridId_Mul(fid, gid, type, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_BC_String_WithGridId_Mul(fid, gid, type, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_BC_FunctionalSize_WithGridId_Mul(fid, gid, type, num, name):
	ier, size = _iric.cg_iRIC_Read_BC_FunctionalSize_WithGridId_Mul(fid, gid, type, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_FunctionalWithName_String_WithGridId_Mul(fid, gid, type, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_BC_FunctionalWithName_String_WithGridId_Mul(fid, gid, type, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_BC_WithGridId_Mul(fid, gid):
	ier = _iric.cg_iRIC_Clear_BC_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Integer_WithGridId_Mul(fid, gid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Integer_WithGridId_Mul(fid, gid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Real_WithGridId_Mul(fid, gid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Real_WithGridId_Mul(fid, gid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_String_WithGridId_Mul(fid, gid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_String_WithGridId_Mul(fid, gid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_String_WithGridId_Mul(fid, gid, type, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_String_WithGridId_Mul(fid, gid, type, num, name, paramname, value)
	_checkErrorCode(ier)


# from iriclib_cc.h
def cg_iRIC_Read_Integer_Mul(fid, name):
	ier, value = _iric.cg_iRIC_Read_Integer_Mul(fid, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Real_Mul(fid, name):
	ier, value = _iric.cg_iRIC_Read_Real_Mul(fid, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_String_Mul(fid, name):
	ier, strvalue = _iric.cg_iRIC_Read_String_Mul(fid, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_FunctionalSize_Mul(fid, name):
	ier, size = _iric.cg_iRIC_Read_FunctionalSize_Mul(fid, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_FunctionalWithName_String_Mul(fid, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_FunctionalWithName_String_Mul(fid, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Write_Integer_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Integer_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Real_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Real_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_String_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_String_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_FunctionalWithName_String_Mul(fid, name, paramname, value):
	ier = _iric.cg_iRIC_Write_FunctionalWithName_String_Mul(fid, name, paramname, value)
	_checkErrorCode(ier)


# from iriclib_complex.h
def cg_iRIC_Read_Complex_Count_WithBaseId_Mul(fid, bid, groupname):
	ier, num = _iric.cg_iRIC_Read_Complex_Count_WithBaseId_Mul(fid, bid, groupname)
	_checkErrorCode(ier)
	return num

def cg_iRIC_Read_Complex_Integer_WithBaseId_Mul(fid, bid, groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Integer_WithBaseId_Mul(fid, bid, groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_Real_WithBaseId_Mul(fid, bid, groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Real_WithBaseId_Mul(fid, bid, groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_String_WithBaseId_Mul(fid, bid, groupname, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_String_WithBaseId_Mul(fid, bid, groupname, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_Complex_FunctionalSize_WithBaseId_Mul(fid, bid, groupname, num, name):
	ier, size = _iric.cg_iRIC_Read_Complex_FunctionalSize_WithBaseId_Mul(fid, bid, groupname, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Complex_FunctionalWithName_String_WithBaseId_Mul(fid, bid, groupname, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_FunctionalWithName_String_WithBaseId_Mul(fid, bid, groupname, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_Complex_WithBaseId_Mul(fid, bid):
	ier = _iric.cg_iRIC_Clear_Complex_WithBaseId_Mul(fid, bid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Integer_WithBaseId_Mul(fid, bid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Integer_WithBaseId_Mul(fid, bid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Real_WithBaseId_Mul(fid, bid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Real_WithBaseId_Mul(fid, bid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_String_WithBaseId_Mul(fid, bid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_String_WithBaseId_Mul(fid, bid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_String_WithBaseId_Mul(fid, bid, groupname, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_String_WithBaseId_Mul(fid, bid, groupname, num, name, paramname, value)
	_checkErrorCode(ier)


# from iriclib_geo.h
def iRIC_Geo_Polygon_Open(filename):
	ier, id = _iric.iRIC_Geo_Polygon_Open(filename)
	_checkErrorCode(ier)
	return id

def iRIC_Geo_Polygon_Read_IntegerValue(id):
	ier, value = _iric.iRIC_Geo_Polygon_Read_IntegerValue(id)
	_checkErrorCode(ier)
	return value

def iRIC_Geo_Polygon_Read_RealValue(id):
	ier, value = _iric.iRIC_Geo_Polygon_Read_RealValue(id)
	_checkErrorCode(ier)
	return value

def iRIC_Geo_Polygon_Read_PointCount(id):
	ier, size = _iric.iRIC_Geo_Polygon_Read_PointCount(id)
	_checkErrorCode(ier)
	return size

def iRIC_Geo_Polygon_Read_HoleCount(id):
	ier, count = _iric.iRIC_Geo_Polygon_Read_HoleCount(id)
	_checkErrorCode(ier)
	return count

def iRIC_Geo_Polygon_Read_HolePointCount(id, holeid):
	ier, count = _iric.iRIC_Geo_Polygon_Read_HolePointCount(id, holeid)
	_checkErrorCode(ier)
	return count

def iRIC_Geo_Polygon_Close(id):
	ier = _iric.iRIC_Geo_Polygon_Close(id)
	_checkErrorCode(ier)

def iRIC_Geo_RiverSurvey_Open(filename):
	ier, id = _iric.iRIC_Geo_RiverSurvey_Open(filename)
	_checkErrorCode(ier)
	return id

def iRIC_Geo_RiverSurvey_Read_Count(id):
	ier, count = _iric.iRIC_Geo_RiverSurvey_Read_Count(id)
	_checkErrorCode(ier)
	return count

def iRIC_Geo_RiverSurvey_Read_Position(id, pointid):
	ier, x, y = _iric.iRIC_Geo_RiverSurvey_Read_Position(id, pointid)
	_checkErrorCode(ier)
	return x, y

def iRIC_Geo_RiverSurvey_Read_Direction(id, pointid):
	ier, vx, vy = _iric.iRIC_Geo_RiverSurvey_Read_Direction(id, pointid)
	_checkErrorCode(ier)
	return vx, vy

def iRIC_Geo_RiverSurvey_Read_Name(id, pointid):
	ier, strvalue = _iric.iRIC_Geo_RiverSurvey_Read_Name(id, pointid)
	_checkErrorCode(ier)
	return strvalue

def iRIC_Geo_RiverSurvey_Read_RealName(id, pointid):
	ier, name = _iric.iRIC_Geo_RiverSurvey_Read_RealName(id, pointid)
	_checkErrorCode(ier)
	return name

def iRIC_Geo_RiverSurvey_Read_LeftShift(id, pointid):
	ier, shift = _iric.iRIC_Geo_RiverSurvey_Read_LeftShift(id, pointid)
	_checkErrorCode(ier)
	return shift

def iRIC_Geo_RiverSurvey_Read_AltitudeCount(id, pointid):
	ier, count = _iric.iRIC_Geo_RiverSurvey_Read_AltitudeCount(id, pointid)
	_checkErrorCode(ier)
	return count

def iRIC_Geo_RiverSurvey_Read_FixedPointL(id, pointid):
	ier, set, directionX, directionY, index = _iric.iRIC_Geo_RiverSurvey_Read_FixedPointL(id, pointid)
	_checkErrorCode(ier)
	return set, directionX, directionY, index

def iRIC_Geo_RiverSurvey_Read_FixedPointR(id, pointid):
	ier, set, directionX, directionY, index = _iric.iRIC_Geo_RiverSurvey_Read_FixedPointR(id, pointid)
	_checkErrorCode(ier)
	return set, directionX, directionY, index

def iRIC_Geo_RiverSurvey_Read_WaterSurfaceElevation(id, pointid):
	ier, set, value = _iric.iRIC_Geo_RiverSurvey_Read_WaterSurfaceElevation(id, pointid)
	_checkErrorCode(ier)
	return set, value

def iRIC_Geo_RiverSurvey_Close(id):
	ier = _iric.iRIC_Geo_RiverSurvey_Close(id)
	_checkErrorCode(ier)


# from iriclib_geoutil.h
def cg_iRIC_Read_Geo_Count_Mul(fid, name):
	ier, count = _iric.cg_iRIC_Read_Geo_Count_Mul(fid, name)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Geo_Filename_Mul(fid, name, geoid):
	ier, strvalue, type = _iric.cg_iRIC_Read_Geo_Filename_Mul(fid, name, geoid)
	_checkErrorCode(ier)
	return strvalue, type


# from iriclib_grid.h
def cg_iRIC_Read_Grid2d_Str_Size_WithGridId_Mul(fid, gid):
	ier, isize, jsize = _iric.cg_iRIC_Read_Grid2d_Str_Size_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return isize, jsize

def cg_iRIC_Read_Grid3d_Str_Size_WithGridId_Mul(fid, gid):
	ier, isize, jsize, ksize = _iric.cg_iRIC_Read_Grid3d_Str_Size_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return isize, jsize, ksize

def cg_iRIC_GetTriangleElementsSize_WithGridId_Mul(fid, gid):
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return size

def cg_iRIC_GetTriangleElementsSize2_WithGridId_Mul(fid, gid):
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize2_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid):
	ier, count = _iric.cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid):
	ier, count = _iric.cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_IFaceCount_WithGridId_Mul(fid, gid):
	ier, count = _iric.cg_iRIC_Read_Grid_IFaceCount_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_JFaceCount_WithGridId_Mul(fid, gid):
	ier, count = _iric.cg_iRIC_Read_Grid_JFaceCount_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_KFaceCount_WithGridId_Mul(fid, gid):
	ier, count = _iric.cg_iRIC_Read_Grid_KFaceCount_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId_Mul(fid, gid, name, dimname):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId_Mul(fid, gid, name, dimname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalTimeSize_WithGridId_Mul(fid, gid, name):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalTimeSize_WithGridId_Mul(fid, gid, name)
	_checkErrorCode(ier)
	return count


# from iriclib_gui_coorp.h
def iRIC_Write_Sol_Start(fname):
	ier = _iric.iRIC_Write_Sol_Start(fname)
	_checkErrorCode(ier)

def iRIC_Write_Sol_End(fname):
	ier = _iric.iRIC_Write_Sol_End(fname)
	_checkErrorCode(ier)

def iRIC_Check_Lock(fname):
	ier = _iric.iRIC_Check_Lock(fname)
	_checkErrorCode(ier)

def iRIC_Check_Cancel():
	ier = _iric.iRIC_Check_Cancel()
	return ier


# from iriclib_init.h
def cg_iRIC_Open(filename, mode):
	ier, fid = _iric.cg_iRIC_Open(filename, mode)
	_checkErrorCode(ier)
	return fid

def cg_iRIC_Close(fid):
	ier = _iric.cg_iRIC_Close(fid)
	_checkErrorCode(ier)

def cg_iRIC_Init(fid):
	ier = _iric.cg_iRIC_Init(fid)
	_checkErrorCode(ier)

def cg_iRIC_InitRead(fid):
	ier = _iric.cg_iRIC_InitRead(fid)
	_checkErrorCode(ier)

def iRIC_InitOption(option):
	ier = _iric.iRIC_InitOption(option)
	_checkErrorCode(ier)

def cg_iRIC_Flush(name, fid):
	ier = _iric.cg_iRIC_Flush(name, fid)
	_checkErrorCode(ier)

def cg_iRIC_GotoBase(fid):
	ier, B = _iric.cg_iRIC_GotoBase(fid)
	_checkErrorCode(ier)
	return B

def cg_iRIC_GotoCC(fid):
	ier = _iric.cg_iRIC_GotoCC(fid)
	_checkErrorCode(ier)

def cg_iRIC_GotoRawDataTop(fid):
	ier = _iric.cg_iRIC_GotoRawDataTop(fid)
	_checkErrorCode(ier)


# from iriclib_not_mul.h
def cg_iRIC_Read_BC_Count_WithGridId(gid, type):
	num = _iric.cg_iRIC_Read_BC_Count_WithGridId(gid, type)
	return num

def cg_iRIC_Read_BC_IndicesSize_WithGridId(gid, type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize_WithGridId(gid, type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_IndicesSize2_WithGridId(gid, type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize2_WithGridId(gid, type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_Integer_WithGridId(gid, type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Integer_WithGridId(gid, type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_Real_WithGridId(gid, type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Real_WithGridId(gid, type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_String_WithGridId(gid, type, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_BC_String_WithGridId(gid, type, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_BC_FunctionalSize_WithGridId(gid, type, num, name):
	ier, size = _iric.cg_iRIC_Read_BC_FunctionalSize_WithGridId(gid, type, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_FunctionalWithName_String_WithGridId(gid, type, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_BC_FunctionalWithName_String_WithGridId(gid, type, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_BC_WithGridId(gid):
	ier = _iric.cg_iRIC_Clear_BC_WithGridId(gid)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Integer_WithGridId(gid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Integer_WithGridId(gid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Real_WithGridId(gid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Real_WithGridId(gid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_String_WithGridId(gid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_String_WithGridId(gid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_String_WithGridId(gid, type, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_String_WithGridId(gid, type, num, name, paramname, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Integer(name):
	ier, value = _iric.cg_iRIC_Read_Integer(name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Real(name):
	ier, value = _iric.cg_iRIC_Read_Real(name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_String(name):
	ier, strvalue = _iric.cg_iRIC_Read_String(name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_FunctionalSize(name):
	ier, size = _iric.cg_iRIC_Read_FunctionalSize(name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_FunctionalWithName_String(name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_FunctionalWithName_String(name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Write_Integer(name, value):
	ier = _iric.cg_iRIC_Write_Integer(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Real(name, value):
	ier = _iric.cg_iRIC_Write_Real(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_String(name, value):
	ier = _iric.cg_iRIC_Write_String(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_FunctionalWithName_String(name, paramname, value):
	ier = _iric.cg_iRIC_Write_FunctionalWithName_String(name, paramname, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Complex_Count_WithBaseId(bid, groupname):
	ier, num = _iric.cg_iRIC_Read_Complex_Count_WithBaseId(bid, groupname)
	_checkErrorCode(ier)
	return num

def cg_iRIC_Read_Complex_Integer_WithBaseId(bid, groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Integer_WithBaseId(bid, groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_Real_WithBaseId(bid, groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Real_WithBaseId(bid, groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_String_WithBaseId(bid, groupname, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_String_WithBaseId(bid, groupname, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_Complex_FunctionalSize_WithBaseId(bid, groupname, num, name):
	ier, size = _iric.cg_iRIC_Read_Complex_FunctionalSize_WithBaseId(bid, groupname, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Complex_FunctionalWithName_String_WithBaseId(bid, groupname, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_FunctionalWithName_String_WithBaseId(bid, groupname, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_Complex_WithBaseId(bid):
	ier = _iric.cg_iRIC_Clear_Complex_WithBaseId(bid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Integer_WithBaseId(bid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Integer_WithBaseId(bid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Real_WithBaseId(bid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Real_WithBaseId(bid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_String_WithBaseId(bid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_String_WithBaseId(bid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_String_WithBaseId(bid, groupname, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_String_WithBaseId(bid, groupname, num, name, paramname, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Geo_Count(name):
	ier, count = _iric.cg_iRIC_Read_Geo_Count(name)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Geo_Filename(name, geoid):
	ier, strvalue, type = _iric.cg_iRIC_Read_Geo_Filename(name, geoid)
	_checkErrorCode(ier)
	return strvalue, type

def cg_iRIC_Read_Grid2d_Str_Size_WithGridId(gid):
	ier, isize, jsize = _iric.cg_iRIC_Read_Grid2d_Str_Size_WithGridId(gid)
	_checkErrorCode(ier)
	return isize, jsize

def cg_iRIC_Read_Grid3d_Str_Size_WithGridId(gid):
	ier, isize, jsize, ksize = _iric.cg_iRIC_Read_Grid3d_Str_Size_WithGridId(gid)
	_checkErrorCode(ier)
	return isize, jsize, ksize

def cg_iRIC_GetTriangleElementsSize_WithGridId(gid):
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize_WithGridId(gid)
	_checkErrorCode(ier)
	return size

def cg_iRIC_GetTriangleElementsSize2_WithGridId(gid):
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize2_WithGridId(gid)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Grid_NodeCount_WithGridId(gid):
	ier, count = _iric.cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_CellCount_WithGridId(gid):
	ier, count = _iric.cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_IFaceCount_WithGridId(gid):
	ier, count = _iric.cg_iRIC_Read_Grid_IFaceCount_WithGridId(gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_JFaceCount_WithGridId(gid):
	ier, count = _iric.cg_iRIC_Read_Grid_JFaceCount_WithGridId(gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_KFaceCount_WithGridId(gid):
	ier, count = _iric.cg_iRIC_Read_Grid_KFaceCount_WithGridId(gid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId(gid, name, dimname):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId(gid, name, dimname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalTimeSize_WithGridId(gid, name):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalTimeSize_WithGridId(gid, name)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Complex_Count(groupname):
	ier, num = _iric.cg_iRIC_Read_Complex_Count(groupname)
	_checkErrorCode(ier)
	return num

def cg_iRIC_Read_Complex_Integer(groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Integer(groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_Real(groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Real(groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_String(groupname, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_String(groupname, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_Complex_FunctionalSize(groupname, num, name):
	ier, size = _iric.cg_iRIC_Read_Complex_FunctionalSize(groupname, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Complex_FunctionalWithName_String(groupname, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_FunctionalWithName_String(groupname, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_Complex():
	ier = _iric.cg_iRIC_Clear_Complex()
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Integer(groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Integer(groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Real(groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Real(groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_String(groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_String(groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_String(groupname, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_String(groupname, num, name, paramname, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_BC_Count(type):
	num = _iric.cg_iRIC_Read_BC_Count(type)
	return num

def cg_iRIC_Read_BC_IndicesSize(type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize(type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_IndicesSize2(type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize2(type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_Integer(type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Integer(type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_Real(type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Real(type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_String(type, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_BC_String(type, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_BC_FunctionalSize(type, num, name):
	ier, size = _iric.cg_iRIC_Read_BC_FunctionalSize(type, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_FunctionalWithName_String(type, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_BC_FunctionalWithName_String(type, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_BC():
	ier = _iric.cg_iRIC_Clear_BC()
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Integer(type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Integer(type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Real(type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Real(type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_String(type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_String(type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_String(type, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_String(type, num, name, paramname, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid2d_Str_Size():
	ier, isize, jsize = _iric.cg_iRIC_Read_Grid2d_Str_Size()
	_checkErrorCode(ier)
	return isize, jsize

def cg_iRIC_Read_Grid3d_Str_Size():
	ier, isize, jsize, ksize = _iric.cg_iRIC_Read_Grid3d_Str_Size()
	_checkErrorCode(ier)
	return isize, jsize, ksize

def cg_iRIC_GetTriangleElementsSize():
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize()
	_checkErrorCode(ier)
	return size

def cg_iRIC_GetTriangleElementsSize2():
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize2()
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Grid_NodeCount():
	ier, count = _iric.cg_iRIC_Read_Grid_NodeCount()
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_CellCount():
	ier, count = _iric.cg_iRIC_Read_Grid_CellCount()
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_IFaceCount():
	ier, count = _iric.cg_iRIC_Read_Grid_IFaceCount()
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_JFaceCount():
	ier, count = _iric.cg_iRIC_Read_Grid_JFaceCount()
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_KFaceCount():
	ier, count = _iric.cg_iRIC_Read_Grid_KFaceCount()
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalDimensionSize(name, dimname):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalDimensionSize(name, dimname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalTimeSize(name):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalTimeSize(name)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_Particle_Count(step):
	ier, count = _iric.cg_iRIC_Read_Sol_Particle_Count(step)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_ParticleGroup_Count(step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_ParticleGroup_Count(step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_ParticleGroup_GroupBegin(name):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupBegin(name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_GroupEnd():
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupEnd()
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos2d(x, y):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos2d(x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos3d(x, y, z):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos3d(x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Integer(name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Integer(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Real(name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Real(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_PolyData_DataCount(step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_DataCount(step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_PolyData_CoordinateCount(step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_CoordinateCount(step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_PolyData_GroupBegin(name):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupBegin(name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_GroupEnd():
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupEnd()
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Integer(name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Integer(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Real(name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Real(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Particle_Count_WithGridId(gid, step):
	ier, count = _iric.cg_iRIC_Read_Sol_Particle_Count_WithGridId(gid, step)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId(gid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId(gid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_ParticleGroup_GroupBegin_WithGridId(gid, name):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupBegin_WithGridId(gid, name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_GroupEnd_WithGridId(gid):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupEnd_WithGridId(gid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos2d_WithGridId(gid, x, y):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos2d_WithGridId(gid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos3d_WithGridId(gid, x, y, z):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos3d_WithGridId(gid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Integer_WithGridId(gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Integer_WithGridId(gid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Real_WithGridId(gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Real_WithGridId(gid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId(gid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId(gid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_PolyData_CoordinateCount_WithGridId(gid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_CoordinateCount_WithGridId(gid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_PolyData_GroupBegin_WithGridId(gid, name):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupBegin_WithGridId(gid, name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_GroupEnd_WithGridId(gid):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupEnd_WithGridId(gid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Integer_WithGridId(gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Integer_WithGridId(gid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Real_WithGridId(gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Real_WithGridId(gid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Count():
	ier, count = _iric.cg_iRIC_Read_Sol_Count()
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_Time(step):
	ier, time = _iric.cg_iRIC_Read_Sol_Time(step)
	_checkErrorCode(ier)
	return time

def cg_iRIC_Read_Sol_Iteration(step):
	ier, index = _iric.cg_iRIC_Read_Sol_Iteration(step)
	_checkErrorCode(ier)
	return index

def cg_iRIC_Read_Sol_BaseIterative_Integer(step, name):
	ier, value = _iric.cg_iRIC_Read_Sol_BaseIterative_Integer(step, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Sol_BaseIterative_Real(step, name):
	ier, value = _iric.cg_iRIC_Read_Sol_BaseIterative_Real(step, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Sol_BaseIterative_String(step, name):
	ier, strvalue = _iric.cg_iRIC_Read_Sol_BaseIterative_String(step, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Write_Sol_Time(time):
	ier = _iric.cg_iRIC_Write_Sol_Time(time)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Iteration(index):
	ier = _iric.cg_iRIC_Write_Sol_Iteration(index)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_BaseIterative_Integer(name, value):
	ier = _iric.cg_iRIC_Write_Sol_BaseIterative_Integer(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_BaseIterative_Real(name, value):
	ier = _iric.cg_iRIC_Write_Sol_BaseIterative_Real(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_BaseIterative_String(name, value):
	ier = _iric.cg_iRIC_Write_Sol_BaseIterative_String(name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_ErrorCode(errorcode):
	ier = _iric.cg_iRIC_Write_ErrorCode(errorcode)
	_checkErrorCode(ier)


# from iriclib_not_withbaseid.h
def cg_iRIC_Read_Complex_Count_Mul(fid, groupname):
	ier, num = _iric.cg_iRIC_Read_Complex_Count_Mul(fid, groupname)
	_checkErrorCode(ier)
	return num

def cg_iRIC_Read_Complex_Integer_Mul(fid, groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Integer_Mul(fid, groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_Real_Mul(fid, groupname, num, name):
	ier, value = _iric.cg_iRIC_Read_Complex_Real_Mul(fid, groupname, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Complex_String_Mul(fid, groupname, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_String_Mul(fid, groupname, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_Complex_FunctionalSize_Mul(fid, groupname, num, name):
	ier, size = _iric.cg_iRIC_Read_Complex_FunctionalSize_Mul(fid, groupname, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Complex_FunctionalWithName_String_Mul(fid, groupname, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_Complex_FunctionalWithName_String_Mul(fid, groupname, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_Complex_Mul(fid):
	ier = _iric.cg_iRIC_Clear_Complex_Mul(fid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Integer_Mul(fid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Integer_Mul(fid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_Real_Mul(fid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_Real_Mul(fid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_String_Mul(fid, groupname, num, name, value):
	ier = _iric.cg_iRIC_Write_Complex_String_Mul(fid, groupname, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_String_Mul(fid, groupname, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_String_Mul(fid, groupname, num, name, paramname, value)
	_checkErrorCode(ier)


# from iriclib_not_withgridid.h
def cg_iRIC_Read_BC_Count_Mul(fid, type):
	num = _iric.cg_iRIC_Read_BC_Count_Mul(fid, type)
	return num

def cg_iRIC_Read_BC_IndicesSize_Mul(fid, type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize_Mul(fid, type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_IndicesSize2_Mul(fid, type, num):
	ier, size = _iric.cg_iRIC_Read_BC_IndicesSize2_Mul(fid, type, num)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_Integer_Mul(fid, type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Integer_Mul(fid, type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_Real_Mul(fid, type, num, name):
	ier, value = _iric.cg_iRIC_Read_BC_Real_Mul(fid, type, num, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_BC_String_Mul(fid, type, num, name):
	ier, strvalue = _iric.cg_iRIC_Read_BC_String_Mul(fid, type, num, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Read_BC_FunctionalSize_Mul(fid, type, num, name):
	ier, size = _iric.cg_iRIC_Read_BC_FunctionalSize_Mul(fid, type, num, name)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_BC_FunctionalWithName_String_Mul(fid, type, num, name, paramname):
	ier, strvalue = _iric.cg_iRIC_Read_BC_FunctionalWithName_String_Mul(fid, type, num, name, paramname)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Clear_BC_Mul(fid):
	ier = _iric.cg_iRIC_Clear_BC_Mul(fid)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Integer_Mul(fid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Integer_Mul(fid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Real_Mul(fid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_Real_Mul(fid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_String_Mul(fid, type, num, name, value):
	ier = _iric.cg_iRIC_Write_BC_String_Mul(fid, type, num, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_String_Mul(fid, type, num, name, paramname, value):
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_String_Mul(fid, type, num, name, paramname, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid2d_Str_Size_Mul(fid):
	ier, isize, jsize = _iric.cg_iRIC_Read_Grid2d_Str_Size_Mul(fid)
	_checkErrorCode(ier)
	return isize, jsize

def cg_iRIC_Read_Grid3d_Str_Size_Mul(fid):
	ier, isize, jsize, ksize = _iric.cg_iRIC_Read_Grid3d_Str_Size_Mul(fid)
	_checkErrorCode(ier)
	return isize, jsize, ksize

def cg_iRIC_GetTriangleElementsSize_Mul(fid):
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize_Mul(fid)
	_checkErrorCode(ier)
	return size

def cg_iRIC_GetTriangleElementsSize2_Mul(fid):
	ier, size = _iric.cg_iRIC_GetTriangleElementsSize2_Mul(fid)
	_checkErrorCode(ier)
	return size

def cg_iRIC_Read_Grid_NodeCount_Mul(fid):
	ier, count = _iric.cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_CellCount_Mul(fid):
	ier, count = _iric.cg_iRIC_Read_Grid_CellCount_Mul(fid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_IFaceCount_Mul(fid):
	ier, count = _iric.cg_iRIC_Read_Grid_IFaceCount_Mul(fid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_JFaceCount_Mul(fid):
	ier, count = _iric.cg_iRIC_Read_Grid_JFaceCount_Mul(fid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_KFaceCount_Mul(fid):
	ier, count = _iric.cg_iRIC_Read_Grid_KFaceCount_Mul(fid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalDimensionSize_Mul(fid, name, dimname):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalDimensionSize_Mul(fid, name, dimname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Grid_FunctionalTimeSize_Mul(fid, name):
	ier, count = _iric.cg_iRIC_Read_Grid_FunctionalTimeSize_Mul(fid, name)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_Particle_Count_Mul(fid, step):
	ier, count = _iric.cg_iRIC_Read_Sol_Particle_Count_Mul(fid, step)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_ParticleGroup_Count_Mul(fid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_ParticleGroup_Count_Mul(fid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_ParticleGroup_GroupBegin_Mul(fid, name):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupBegin_Mul(fid, name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_GroupEnd_Mul(fid):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupEnd_Mul(fid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos2d_Mul(fid, x, y):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos2d_Mul(fid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos3d_Mul(fid, x, y, z):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos3d_Mul(fid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Integer_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Integer_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Real_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Real_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_PolyData_DataCount_Mul(fid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_DataCount_Mul(fid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_PolyData_CoordinateCount_Mul(fid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_CoordinateCount_Mul(fid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_PolyData_GroupBegin_Mul(fid, name):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupBegin_Mul(fid, name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_GroupEnd_Mul(fid):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupEnd_Mul(fid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Integer_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Integer_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Real_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Real_Mul(fid, name, value)
	_checkErrorCode(ier)


# from iriclib_sol_particle.h
def cg_iRIC_Read_Sol_Particle_Count_WithGridId_Mul(fid, gid, step):
	ier, count = _iric.cg_iRIC_Read_Sol_Particle_Count_WithGridId_Mul(fid, gid, step)
	_checkErrorCode(ier)
	return count


# from iriclib_sol_particlegroup.h
def cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId_Mul(fid, gid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId_Mul(fid, gid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_ParticleGroup_GroupBegin_WithGridId_Mul(fid, gid, name):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupBegin_WithGridId_Mul(fid, gid, name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_GroupEnd_WithGridId_Mul(fid, gid):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_GroupEnd_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos2d_WithGridId_Mul(fid, gid, x, y):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos2d_WithGridId_Mul(fid, gid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Pos3d_WithGridId_Mul(fid, gid, x, y, z):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Pos3d_WithGridId_Mul(fid, gid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Integer_WithGridId_Mul(fid, gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Integer_WithGridId_Mul(fid, gid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_ParticleGroup_Real_WithGridId_Mul(fid, gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_ParticleGroup_Real_WithGridId_Mul(fid, gid, name, value)
	_checkErrorCode(ier)


# from iriclib_sol_polydata.h
def cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId_Mul(fid, gid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId_Mul(fid, gid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_PolyData_CoordinateCount_WithGridId_Mul(fid, gid, step, groupname):
	ier, count = _iric.cg_iRIC_Read_Sol_PolyData_CoordinateCount_WithGridId_Mul(fid, gid, step, groupname)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Write_Sol_PolyData_GroupBegin_WithGridId_Mul(fid, gid, name):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupBegin_WithGridId_Mul(fid, gid, name)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_GroupEnd_WithGridId_Mul(fid, gid):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_GroupEnd_WithGridId_Mul(fid, gid)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Integer_WithGridId_Mul(fid, gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Integer_WithGridId_Mul(fid, gid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Real_WithGridId_Mul(fid, gid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Real_WithGridId_Mul(fid, gid, name, value)
	_checkErrorCode(ier)


# from iriclib_solution.h
def cg_iRIC_Read_Sol_Count_Mul(fid):
	ier, count = _iric.cg_iRIC_Read_Sol_Count_Mul(fid)
	_checkErrorCode(ier)
	return count

def cg_iRIC_Read_Sol_Time_Mul(fid, step):
	ier, time = _iric.cg_iRIC_Read_Sol_Time_Mul(fid, step)
	_checkErrorCode(ier)
	return time

def cg_iRIC_Read_Sol_Iteration_Mul(fid, step):
	ier, index = _iric.cg_iRIC_Read_Sol_Iteration_Mul(fid, step)
	_checkErrorCode(ier)
	return index

def cg_iRIC_Read_Sol_BaseIterative_Integer_Mul(fid, step, name):
	ier, value = _iric.cg_iRIC_Read_Sol_BaseIterative_Integer_Mul(fid, step, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Sol_BaseIterative_Real_Mul(fid, step, name):
	ier, value = _iric.cg_iRIC_Read_Sol_BaseIterative_Real_Mul(fid, step, name)
	_checkErrorCode(ier)
	return value

def cg_iRIC_Read_Sol_BaseIterative_String_Mul(fid, step, name):
	ier, strvalue = _iric.cg_iRIC_Read_Sol_BaseIterative_String_Mul(fid, step, name)
	_checkErrorCode(ier)
	return strvalue

def cg_iRIC_Write_Sol_Time_Mul(fid, time):
	ier = _iric.cg_iRIC_Write_Sol_Time_Mul(fid, time)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Iteration_Mul(fid, index):
	ier = _iric.cg_iRIC_Write_Sol_Iteration_Mul(fid, index)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_BaseIterative_Integer_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_BaseIterative_Integer_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_BaseIterative_Real_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_BaseIterative_Real_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_BaseIterative_String_Mul(fid, name, value):
	ier = _iric.cg_iRIC_Write_Sol_BaseIterative_String_Mul(fid, name, value)
	_checkErrorCode(ier)

def cg_iRIC_Write_ErrorCode_Mul(fid, errorcode):
	ier = _iric.cg_iRIC_Write_ErrorCode_Mul(fid, errorcode)
	_checkErrorCode(ier)


# from iriclib_wrapper.h
def cg_iRIC_Read_BC_Indices_WithGridId_Mul(fid, gid, type, num):
	size = cg_iRIC_Read_BC_IndicesSize2_WithGridId_Mul(fid, gid, type, num)
	idx = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Indices_WithGridId_Mul(fid, gid, type, num, idx)
	_checkErrorCode(ier)
	return idx.get()

def cg_iRIC_Read_BC_Functional_WithGridId_Mul(fid, gid, type, num, name):
	size = cg_iRIC_Read_BC_FunctionalSize_WithGridId_Mul(fid, gid, type, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Functional_WithGridId_Mul(fid, gid, type, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_BC_FunctionalWithName_WithGridId_Mul(fid, gid, type, num, name, paramname):
	size = cg_iRIC_Read_BC_FunctionalSize_WithGridId_Mul(fid, gid, type, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_FunctionalWithName_WithGridId_Mul(fid, gid, type, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_BC_Indices_WithGridId_Mul(fid, gid, type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices_WithGridId_Mul(fid, gid, type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Indices2_WithGridId_Mul(fid, gid, type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices2_WithGridId_Mul(fid, gid, type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Functional_WithGridId_Mul(fid, gid, type, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_BC_Functional_WithGridId_Mul(fid, gid, type, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_WithGridId_Mul(fid, gid, type, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_WithGridId_Mul(fid, gid, type, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Functional_Mul(fid, name):
	size = cg_iRIC_Read_FunctionalSize_Mul(fid, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Functional_Mul(fid, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_FunctionalWithName_Mul(fid, name, paramname):
	size = cg_iRIC_Read_FunctionalSize_Mul(fid, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_FunctionalWithName_Mul(fid, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Functional_Mul(fid, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Functional_Mul(fid, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_FunctionalWithName_Mul(fid, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_FunctionalWithName_Mul(fid, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Complex_Functional_WithBaseId_Mul(fid, bid, groupname, num, name):
	size = cg_iRIC_Read_Complex_FunctionalSize_WithBaseId_Mul(fid, bid, groupname, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_Functional_WithBaseId_Mul(fid, bid, groupname, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Complex_FunctionalWithName_WithBaseId_Mul(fid, bid, groupname, num, name, paramname):
	size = cg_iRIC_Read_Complex_FunctionalSize_WithBaseId_Mul(fid, bid, groupname, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_FunctionalWithName_WithBaseId_Mul(fid, bid, groupname, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Complex_Node_WithGridId_Mul(fid, gid, groupname):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Node_WithGridId_Mul(fid, gid, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Complex_Cell_WithGridId_Mul(fid, gid, groupname):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Cell_WithGridId_Mul(fid, gid, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Complex_Functional_WithBaseId_Mul(fid, bid, groupname, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Complex_Functional_WithBaseId_Mul(fid, bid, groupname, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_WithBaseId_Mul(fid, bid, groupname, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_WithBaseId_Mul(fid, bid, groupname, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Complex_Node_WithGridId_Mul(fid, gid, groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Node_WithGridId_Mul(fid, gid, groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Complex_Cell_WithGridId_Mul(fid, gid, groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Cell_WithGridId_Mul(fid, gid, groupname, v)
	_checkErrorCode(ier)

def iRIC_Geo_Polygon_Read_Points(id):
	size = iRIC_Geo_Polygon_Read_PointCount(id)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.iRIC_Geo_Polygon_Read_Points(id, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def iRIC_Geo_Polygon_Read_HolePoints(id, holeid):
	size = iRIC_Geo_Polygon_Read_HolePointCount(id, holeid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.iRIC_Geo_Polygon_Read_HolePoints(id, holeid, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def iRIC_Geo_RiverSurvey_Read_Altitudes(id, pointid):
	size = iRIC_Geo_RiverSurvey_Read_AltitudeCount(id, pointid)
	position = RealArrayContainer(size)
	height = RealArrayContainer(size)
	active = IntArrayContainer(size)
	ier = _iric.iRIC_Geo_RiverSurvey_Read_Altitudes(id, pointid, position, height, active)
	_checkErrorCode(ier)
	return position.get(), height.get(), active.get()

def cg_iRIC_Read_Grid2d_Coords_WithGridId_Mul(fid, gid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid2d_Coords_WithGridId_Mul(fid, gid, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Grid3d_Coords_WithGridId_Mul(fid, gid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid3d_Coords_WithGridId_Mul(fid, gid, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_GetTriangleElements_WithGridId_Mul(fid, gid):
	size = cg_iRIC_GetTriangleElementsSize2_WithGridId_Mul(fid, gid)
	id = IntArrayContainer(size)
	ier = _iric.cg_iRIC_GetTriangleElements_WithGridId_Mul(fid, gid, id)
	_checkErrorCode(ier)
	return id.get()

def cg_iRIC_Read_Grid_Real_Node_WithGridId_Mul(fid, gid, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Node_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Node_WithGridId_Mul(fid, gid, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Node_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Real_Cell_WithGridId_Mul(fid, gid, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Cell_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Cell_WithGridId_Mul(fid, gid, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Cell_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Integer_WithGridId_Mul(fid, gid, name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId_Mul(fid, gid, name, dimname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Integer_WithGridId_Mul(fid, gid, name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Real_WithGridId_Mul(fid, gid, name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId_Mul(fid, gid, name, dimname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Real_WithGridId_Mul(fid, gid, name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalTime_WithGridId_Mul(fid, gid, name):
	size = cg_iRIC_Read_Grid_FunctionalTimeSize_WithGridId_Mul(fid, gid, name)
	time = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalTime_WithGridId_Mul(fid, gid, name, time)
	_checkErrorCode(ier)
	return time.get()

def cg_iRIC_Read_Grid_Functional_Integer_Node_WithGridId_Mul(fid, gid, name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Node_WithGridId_Mul(fid, gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Node_WithGridId_Mul(fid, gid, name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Node_WithGridId_Mul(fid, gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Integer_Cell_WithGridId_Mul(fid, gid, name, dimid):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Cell_WithGridId_Mul(fid, gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Cell_WithGridId_Mul(fid, gid, name, dimid):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Cell_WithGridId_Mul(fid, gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_WriteGridCoord1d_WithGridId_Mul(fid, isize, x_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	ier, gid = _iric.cg_iRIC_WriteGridCoord1d_WithGridId_Mul(fid, isize, x)
	_checkErrorCode(ier)
	return gid

def cg_iRIC_WriteGridCoord2d_WithGridId_Mul(fid, isize, jsize, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier, gid = _iric.cg_iRIC_WriteGridCoord2d_WithGridId_Mul(fid, isize, jsize, x, y)
	_checkErrorCode(ier)
	return gid

def cg_iRIC_WriteGridCoord3d_WithGridId_Mul(fid, isize, jsize, ksize, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier, gid = _iric.cg_iRIC_WriteGridCoord3d_WithGridId_Mul(fid, isize, jsize, ksize, x, y, z)
	_checkErrorCode(ier)
	return gid

def cg_iRIC_Write_Grid_Real_Node_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Node_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Node_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Node_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Real_Cell_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Cell_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Cell_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Cell_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_BC_Indices_WithGridId(gid, type, num):
	size = cg_iRIC_Read_BC_IndicesSize2_WithGridId(gid, type, num)
	idx = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Indices_WithGridId(gid, type, num, idx)
	_checkErrorCode(ier)
	return idx.get()

def cg_iRIC_Read_BC_Functional_WithGridId(gid, type, num, name):
	size = cg_iRIC_Read_BC_FunctionalSize_WithGridId(gid, type, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Functional_WithGridId(gid, type, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_BC_FunctionalWithName_WithGridId(gid, type, num, name, paramname):
	size = cg_iRIC_Read_BC_FunctionalSize_WithGridId(gid, type, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_FunctionalWithName_WithGridId(gid, type, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_BC_Indices_WithGridId(gid, type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices_WithGridId(gid, type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Indices2_WithGridId(gid, type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices2_WithGridId(gid, type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Functional_WithGridId(gid, type, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_BC_Functional_WithGridId(gid, type, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_WithGridId(gid, type, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_WithGridId(gid, type, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Functional(name):
	size = cg_iRIC_Read_FunctionalSize(name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Functional(name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_FunctionalWithName(name, paramname):
	size = cg_iRIC_Read_FunctionalSize(name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_FunctionalWithName(name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Functional(name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Functional(name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_FunctionalWithName(name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_FunctionalWithName(name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Complex_Functional_WithBaseId(bid, groupname, num, name):
	size = cg_iRIC_Read_Complex_FunctionalSize_WithBaseId(bid, groupname, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_Functional_WithBaseId(bid, groupname, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Complex_FunctionalWithName_WithBaseId(bid, groupname, num, name, paramname):
	size = cg_iRIC_Read_Complex_FunctionalSize_WithBaseId(bid, groupname, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_FunctionalWithName_WithBaseId(bid, groupname, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Complex_Node_WithGridId(gid, groupname):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Node_WithGridId(gid, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Complex_Cell_WithGridId(gid, groupname):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Cell_WithGridId(gid, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Complex_Functional_WithBaseId(bid, groupname, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Complex_Functional_WithBaseId(bid, groupname, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_WithBaseId(bid, groupname, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_WithBaseId(bid, groupname, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Complex_Node_WithGridId(gid, groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Node_WithGridId(gid, groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Complex_Cell_WithGridId(gid, groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Cell_WithGridId(gid, groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid2d_Coords_WithGridId(gid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid2d_Coords_WithGridId(gid, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Grid3d_Coords_WithGridId(gid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid3d_Coords_WithGridId(gid, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_GetTriangleElements_WithGridId(gid):
	size = cg_iRIC_GetTriangleElementsSize2_WithGridId(gid)
	id = IntArrayContainer(size)
	ier = _iric.cg_iRIC_GetTriangleElements_WithGridId(gid, id)
	_checkErrorCode(ier)
	return id.get()

def cg_iRIC_Read_Grid_Real_Node_WithGridId(gid, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Node_WithGridId(gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Node_WithGridId(gid, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Node_WithGridId(gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Real_Cell_WithGridId(gid, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Cell_WithGridId(gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Cell_WithGridId(gid, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Cell_WithGridId(gid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Integer_WithGridId(gid, name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId(gid, name, dimname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Integer_WithGridId(gid, name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Real_WithGridId(gid, name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize_WithGridId(gid, name, dimname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Real_WithGridId(gid, name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalTime_WithGridId(gid, name):
	size = cg_iRIC_Read_Grid_FunctionalTimeSize_WithGridId(gid, name)
	time = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalTime_WithGridId(gid, name, time)
	_checkErrorCode(ier)
	return time.get()

def cg_iRIC_Read_Grid_Functional_Integer_Node_WithGridId(gid, name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Node_WithGridId(gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Node_WithGridId(gid, name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Node_WithGridId(gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Integer_Cell_WithGridId(gid, name, dimid):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Cell_WithGridId(gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Cell_WithGridId(gid, name, dimid):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Cell_WithGridId(gid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_WriteGridCoord1d_WithGridId(isize, x_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	ier, gid = _iric.cg_iRIC_WriteGridCoord1d_WithGridId(isize, x)
	_checkErrorCode(ier)
	return gid

def cg_iRIC_WriteGridCoord2d_WithGridId(isize, jsize, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier, gid = _iric.cg_iRIC_WriteGridCoord2d_WithGridId(isize, jsize, x, y)
	_checkErrorCode(ier)
	return gid

def cg_iRIC_WriteGridCoord3d_WithGridId(isize, jsize, ksize, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier, gid = _iric.cg_iRIC_WriteGridCoord3d_WithGridId(isize, jsize, ksize, x, y, z)
	_checkErrorCode(ier)
	return gid

def cg_iRIC_Write_Grid_Real_Node_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Node_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Node_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Node_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Real_Cell_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Cell_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Cell_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Cell_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Complex_Functional(groupname, num, name):
	size = cg_iRIC_Read_Complex_FunctionalSize(groupname, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_Functional(groupname, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Complex_FunctionalWithName(groupname, num, name, paramname):
	size = cg_iRIC_Read_Complex_FunctionalSize(groupname, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_FunctionalWithName(groupname, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Complex_Functional(groupname, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Complex_Functional(groupname, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName(groupname, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName(groupname, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_BC_Indices(type, num):
	size = cg_iRIC_Read_BC_IndicesSize2(type, num)
	idx = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Indices(type, num, idx)
	_checkErrorCode(ier)
	return idx.get()

def cg_iRIC_Read_BC_Functional(type, num, name):
	size = cg_iRIC_Read_BC_FunctionalSize(type, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Functional(type, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_BC_FunctionalWithName(type, num, name, paramname):
	size = cg_iRIC_Read_BC_FunctionalSize(type, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_FunctionalWithName(type, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_BC_Indices(type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices(type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Indices2(type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices2(type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Functional(type, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_BC_Functional(type, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName(type, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName(type, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid_Complex_Node(groupname):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Node(groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Complex_Cell(groupname):
	size = cg_iRIC_Read_Grid_CellCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Cell(groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Grid_Complex_Node(groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Node(groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Complex_Cell(groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Cell(groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid2d_Coords():
	size = cg_iRIC_Read_Grid_NodeCount()
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid2d_Coords(x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Grid3d_Coords():
	size = cg_iRIC_Read_Grid_NodeCount()
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid3d_Coords(x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_GetTriangleElements():
	size = cg_iRIC_GetTriangleElementsSize2()
	id = IntArrayContainer(size)
	ier = _iric.cg_iRIC_GetTriangleElements(id)
	_checkErrorCode(ier)
	return id.get()

def cg_iRIC_Read_Grid_Real_Node(name):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Node(name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Node(name):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Node(name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Real_Cell(name):
	size = cg_iRIC_Read_Grid_CellCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Cell(name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Cell(name):
	size = cg_iRIC_Read_Grid_CellCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Cell(name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Integer(name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize(name, dimname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Integer(name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Real(name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize(name, dimname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Real(name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalTime(name):
	size = cg_iRIC_Read_Grid_FunctionalTimeSize(name)
	time = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalTime(name, time)
	_checkErrorCode(ier)
	return time.get()

def cg_iRIC_Read_Grid_Functional_Integer_Node(name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Node(name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Node(name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Node(name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Integer_Cell(name, dimid):
	size = cg_iRIC_Read_Grid_CellCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Cell(name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Cell(name, dimid):
	size = cg_iRIC_Read_Grid_CellCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Cell(name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_WriteGridCoord1d(isize, x_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	ier = _iric.cg_iRIC_WriteGridCoord1d(isize, x)
	_checkErrorCode(ier)

def cg_iRIC_WriteGridCoord2d(isize, jsize, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_WriteGridCoord2d(isize, jsize, x, y)
	_checkErrorCode(ier)

def cg_iRIC_WriteGridCoord3d(isize, jsize, ksize, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_WriteGridCoord3d(isize, jsize, ksize, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Real_Node(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Node(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Node(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Node(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Real_Cell(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Cell(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Cell(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Cell(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Cell_Integer(step, name):
	size = cg_iRIC_Read_Grid_CellCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Integer(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Cell_Real(step, name):
	size = cg_iRIC_Read_Grid_CellCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Real(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Cell_Integer(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Integer(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Cell_Real(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Real(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_GridCoord2d(step):
	size = cg_iRIC_Read_Grid_NodeCount()
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord2d(step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_GridCoord3d(step):
	size = cg_iRIC_Read_Grid_NodeCount()
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord3d(step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Write_Sol_GridCoord2d(x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord2d(x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_GridCoord3d(x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord3d(x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_IFace_Integer(step, name):
	size = cg_iRIC_Read_Grid_IFaceCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Integer(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_IFace_Real(step, name):
	size = cg_iRIC_Read_Grid_IFaceCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Real(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_IFace_Integer(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Integer(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_IFace_Real(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Real(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_JFace_Integer(step, name):
	size = cg_iRIC_Read_Grid_JFaceCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Integer(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_JFace_Real(step, name):
	size = cg_iRIC_Read_Grid_JFaceCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Real(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_JFace_Integer(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Integer(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_JFace_Real(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Real(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_KFace_Integer(step, name):
	size = cg_iRIC_Read_Grid_KFaceCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Integer(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_KFace_Real(step, name):
	size = cg_iRIC_Read_Grid_KFaceCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Real(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_KFace_Integer(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Integer(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_KFace_Real(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Real(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Integer(step, name):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Integer(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Real(step, name):
	size = cg_iRIC_Read_Grid_NodeCount()
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Real(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Integer(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Integer(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Real(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Real(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Particle_Pos2d(step):
	size = cg_iRIC_Read_Sol_Particle_Count(step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos2d(step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_Particle_Pos3d(step):
	size = cg_iRIC_Read_Sol_Particle_Count(step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos3d(step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_Particle_Real(step, name):
	size = cg_iRIC_Read_Sol_Particle_Count(step)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Real(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Particle_Integer(step, name):
	size = cg_iRIC_Read_Sol_Particle_Count(step)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Integer(step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Particle_Pos2d(x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos2d(x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Pos3d(x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos3d(x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Real(name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Real(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Integer(name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Integer(name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_ParticleGroup_Pos2d(step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count(step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos2d(step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_ParticleGroup_Pos3d(step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count(step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos3d(step, groupname, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_ParticleGroup_Real(step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count(step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Real(step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_ParticleGroup_Integer(step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count(step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Integer(step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Pos2d(step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_CoordinateCount(step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Pos2d(step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_PolyData_Type(step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_DataCount(step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Type(step, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Real(step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount(step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Real(step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Integer(step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount(step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Integer(step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_PolyData_Polygon(numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polygon(numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Polyline(numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polyline(numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Cell_Integer_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Integer_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Cell_Real_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Real_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Cell_Integer_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Integer_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Cell_Real_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Real_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_GridCoord2d_WithGridId(gid, step):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord2d_WithGridId(gid, step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_GridCoord3d_WithGridId(gid, step):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord3d_WithGridId(gid, step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Write_Sol_GridCoord2d_WithGridId(gid, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord2d_WithGridId(gid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_GridCoord3d_WithGridId(gid, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord3d_WithGridId(gid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_IFace_Integer_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_IFaceCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Integer_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_IFace_Real_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_IFaceCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Real_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_IFace_Integer_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Integer_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_IFace_Real_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Real_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_JFace_Integer_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_JFaceCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Integer_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_JFace_Real_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_JFaceCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Real_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_JFace_Integer_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Integer_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_JFace_Real_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Real_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_KFace_Integer_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_KFaceCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Integer_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_KFace_Real_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_KFaceCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Real_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_KFace_Integer_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Integer_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_KFace_Real_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Real_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Integer_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Integer_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Real_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId(gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Real_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Integer_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Integer_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Real_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Real_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Particle_Pos2d_WithGridId(gid, step):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId(gid, step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos2d_WithGridId(gid, step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_Particle_Pos3d_WithGridId(gid, step):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId(gid, step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos3d_WithGridId(gid, step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_Particle_Real_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId(gid, step)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Real_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Particle_Integer_WithGridId(gid, step, name):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId(gid, step)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Integer_WithGridId(gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Particle_Pos2d_WithGridId(gid, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos2d_WithGridId(gid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Pos3d_WithGridId(gid, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos3d_WithGridId(gid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Real_WithGridId(gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Real_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Integer_WithGridId(gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Integer_WithGridId(gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_ParticleGroup_Pos2d_WithGridId(gid, step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId(gid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos2d_WithGridId(gid, step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_ParticleGroup_Pos3d_WithGridId(gid, step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId(gid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos3d_WithGridId(gid, step, groupname, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_ParticleGroup_Real_WithGridId(gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId(gid, step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Real_WithGridId(gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_ParticleGroup_Integer_WithGridId(gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId(gid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Integer_WithGridId(gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Pos2d_WithGridId(gid, step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_CoordinateCount_WithGridId(gid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Pos2d_WithGridId(gid, step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_PolyData_Type_WithGridId(gid, step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId(gid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Type_WithGridId(gid, step, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Real_WithGridId(gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId(gid, step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Real_WithGridId(gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Integer_WithGridId(gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId(gid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Integer_WithGridId(gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_PolyData_Polygon_WithGridId(gid, numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polygon_WithGridId(gid, numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Polyline_WithGridId(gid, numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polyline_WithGridId(gid, numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Read_Complex_Functional_Mul(fid, groupname, num, name):
	size = cg_iRIC_Read_Complex_FunctionalSize_Mul(fid, groupname, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_Functional_Mul(fid, groupname, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Complex_FunctionalWithName_Mul(fid, groupname, num, name, paramname):
	size = cg_iRIC_Read_Complex_FunctionalSize_Mul(fid, groupname, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Complex_FunctionalWithName_Mul(fid, groupname, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Complex_Functional_Mul(fid, groupname, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Complex_Functional_Mul(fid, groupname, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Complex_FunctionalWithName_Mul(fid, groupname, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Complex_FunctionalWithName_Mul(fid, groupname, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_BC_Indices_Mul(fid, type, num):
	size = cg_iRIC_Read_BC_IndicesSize2_Mul(fid, type, num)
	idx = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Indices_Mul(fid, type, num, idx)
	_checkErrorCode(ier)
	return idx.get()

def cg_iRIC_Read_BC_Functional_Mul(fid, type, num, name):
	size = cg_iRIC_Read_BC_FunctionalSize_Mul(fid, type, num, name)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_Functional_Mul(fid, type, num, name, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_BC_FunctionalWithName_Mul(fid, type, num, name, paramname):
	size = cg_iRIC_Read_BC_FunctionalSize_Mul(fid, type, num, name)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_BC_FunctionalWithName_Mul(fid, type, num, name, paramname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_BC_Indices_Mul(fid, type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices_Mul(fid, type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Indices2_Mul(fid, type, num, idx_arr):
	idx = IntArrayContainer(idx_arr.size)
	idx.set(idx_arr)
	ier = _iric.cg_iRIC_Write_BC_Indices2_Mul(fid, type, num, idx)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_Functional_Mul(fid, type, num, name, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_BC_Functional_Mul(fid, type, num, name, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_BC_FunctionalWithName_Mul(fid, type, num, name, paramname, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_BC_FunctionalWithName_Mul(fid, type, num, name, paramname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid_Complex_Node_Mul(fid, groupname):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Node_Mul(fid, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Complex_Cell_Mul(fid, groupname):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Complex_Cell_Mul(fid, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Grid_Complex_Node_Mul(fid, groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Node_Mul(fid, groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Complex_Cell_Mul(fid, groupname, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Complex_Cell_Mul(fid, groupname, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Grid2d_Coords_Mul(fid):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid2d_Coords_Mul(fid, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Grid3d_Coords_Mul(fid):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid3d_Coords_Mul(fid, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_GetTriangleElements_Mul(fid):
	size = cg_iRIC_GetTriangleElementsSize2_Mul(fid)
	id = IntArrayContainer(size)
	ier = _iric.cg_iRIC_GetTriangleElements_Mul(fid, id)
	_checkErrorCode(ier)
	return id.get()

def cg_iRIC_Read_Grid_Real_Node_Mul(fid, name):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Node_Mul(fid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Node_Mul(fid, name):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Node_Mul(fid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Real_Cell_Mul(fid, name):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Real_Cell_Mul(fid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Integer_Cell_Mul(fid, name):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Integer_Cell_Mul(fid, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Integer_Mul(fid, name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize_Mul(fid, name, dimname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Integer_Mul(fid, name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalDimension_Real_Mul(fid, name, dimname):
	size = cg_iRIC_Read_Grid_FunctionalDimensionSize_Mul(fid, name, dimname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalDimension_Real_Mul(fid, name, dimname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_FunctionalTime_Mul(fid, name):
	size = cg_iRIC_Read_Grid_FunctionalTimeSize_Mul(fid, name)
	time = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_FunctionalTime_Mul(fid, name, time)
	_checkErrorCode(ier)
	return time.get()

def cg_iRIC_Read_Grid_Functional_Integer_Node_Mul(fid, name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Node_Mul(fid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Node_Mul(fid, name, dimid):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Node_Mul(fid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Integer_Cell_Mul(fid, name, dimid):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Integer_Cell_Mul(fid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Grid_Functional_Real_Cell_Mul(fid, name, dimid):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Grid_Functional_Real_Cell_Mul(fid, name, dimid, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_WriteGridCoord1d_Mul(fid, isize, x_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	ier = _iric.cg_iRIC_WriteGridCoord1d_Mul(fid, isize, x)
	_checkErrorCode(ier)

def cg_iRIC_WriteGridCoord2d_Mul(fid, isize, jsize, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_WriteGridCoord2d_Mul(fid, isize, jsize, x, y)
	_checkErrorCode(ier)

def cg_iRIC_WriteGridCoord3d_Mul(fid, isize, jsize, ksize, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_WriteGridCoord3d_Mul(fid, isize, jsize, ksize, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Real_Node_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Node_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Node_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Node_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Real_Cell_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Real_Cell_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Grid_Integer_Cell_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Grid_Integer_Cell_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Cell_Integer_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Integer_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Cell_Real_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_CellCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Real_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Cell_Integer_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Integer_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Cell_Real_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Real_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_GridCoord2d_Mul(fid, step):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord2d_Mul(fid, step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_GridCoord3d_Mul(fid, step):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord3d_Mul(fid, step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Write_Sol_GridCoord2d_Mul(fid, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord2d_Mul(fid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_GridCoord3d_Mul(fid, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord3d_Mul(fid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_IFace_Integer_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_IFaceCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Integer_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_IFace_Real_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_IFaceCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Real_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_IFace_Integer_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Integer_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_IFace_Real_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Real_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_JFace_Integer_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_JFaceCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Integer_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_JFace_Real_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_JFaceCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Real_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_JFace_Integer_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Integer_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_JFace_Real_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Real_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_KFace_Integer_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_KFaceCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Integer_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_KFace_Real_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_KFaceCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Real_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_KFace_Integer_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Integer_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_KFace_Real_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Real_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Integer_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Integer_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Real_Mul(fid, step, name):
	size = cg_iRIC_Read_Grid_NodeCount_Mul(fid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Real_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Integer_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Integer_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Real_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Real_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Particle_Pos2d_Mul(fid, step):
	size = cg_iRIC_Read_Sol_Particle_Count_Mul(fid, step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos2d_Mul(fid, step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_Particle_Pos3d_Mul(fid, step):
	size = cg_iRIC_Read_Sol_Particle_Count_Mul(fid, step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos3d_Mul(fid, step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_Particle_Real_Mul(fid, step, name):
	size = cg_iRIC_Read_Sol_Particle_Count_Mul(fid, step)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Real_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Particle_Integer_Mul(fid, step, name):
	size = cg_iRIC_Read_Sol_Particle_Count_Mul(fid, step)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Integer_Mul(fid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Particle_Pos2d_Mul(fid, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos2d_Mul(fid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Pos3d_Mul(fid, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos3d_Mul(fid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Real_Mul(fid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Real_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Integer_Mul(fid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Integer_Mul(fid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_ParticleGroup_Pos2d_Mul(fid, step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_Mul(fid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos2d_Mul(fid, step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_ParticleGroup_Pos3d_Mul(fid, step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_Mul(fid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos3d_Mul(fid, step, groupname, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_ParticleGroup_Real_Mul(fid, step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_Mul(fid, step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Real_Mul(fid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_ParticleGroup_Integer_Mul(fid, step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_Mul(fid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Integer_Mul(fid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Pos2d_Mul(fid, step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_CoordinateCount_Mul(fid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Pos2d_Mul(fid, step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_PolyData_Type_Mul(fid, step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_Mul(fid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Type_Mul(fid, step, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Real_Mul(fid, step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_Mul(fid, step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Real_Mul(fid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Integer_Mul(fid, step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_Mul(fid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Integer_Mul(fid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_PolyData_Polygon_Mul(fid, numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polygon_Mul(fid, numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Polyline_Mul(fid, numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polyline_Mul(fid, numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Cell_Integer_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Integer_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Cell_Real_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_CellCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Cell_Real_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Cell_Integer_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Integer_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Cell_Real_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Cell_Real_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_GridCoord2d_WithGridId_Mul(fid, gid, step):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord2d_WithGridId_Mul(fid, gid, step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_GridCoord3d_WithGridId_Mul(fid, gid, step):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_GridCoord3d_WithGridId_Mul(fid, gid, step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Write_Sol_GridCoord2d_WithGridId_Mul(fid, gid, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord2d_WithGridId_Mul(fid, gid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_GridCoord3d_WithGridId_Mul(fid, gid, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_GridCoord3d_WithGridId_Mul(fid, gid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_IFace_Integer_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_IFaceCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Integer_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_IFace_Real_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_IFaceCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_IFace_Real_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_IFace_Integer_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Integer_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_IFace_Real_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_IFace_Real_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_JFace_Integer_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_JFaceCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Integer_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_JFace_Real_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_JFaceCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_JFace_Real_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_JFace_Integer_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Integer_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_JFace_Real_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_JFace_Real_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_KFace_Integer_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_KFaceCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Integer_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_KFace_Real_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_KFaceCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_KFace_Real_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_KFace_Integer_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Integer_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_KFace_Real_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_KFace_Real_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Integer_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Integer_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Real_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Grid_NodeCount_WithGridId_Mul(fid, gid)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Real_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Integer_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Integer_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Real_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Real_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_Particle_Pos2d_WithGridId_Mul(fid, gid, step):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId_Mul(fid, gid, step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos2d_WithGridId_Mul(fid, gid, step, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_Particle_Pos3d_WithGridId_Mul(fid, gid, step):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId_Mul(fid, gid, step)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Pos3d_WithGridId_Mul(fid, gid, step, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_Particle_Real_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId_Mul(fid, gid, step)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Real_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_Particle_Integer_WithGridId_Mul(fid, gid, step, name):
	size = cg_iRIC_Read_Sol_Particle_Count_WithGridId_Mul(fid, gid, step)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_Particle_Integer_WithGridId_Mul(fid, gid, step, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_Particle_Pos2d_WithGridId_Mul(fid, gid, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos2d_WithGridId_Mul(fid, gid, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Pos3d_WithGridId_Mul(fid, gid, x_arr, y_arr, z_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	z = RealArrayContainer(z_arr.size)
	z.set(z_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Pos3d_WithGridId_Mul(fid, gid, x, y, z)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Real_WithGridId_Mul(fid, gid, name, v_arr):
	v = RealArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Real_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_Particle_Integer_WithGridId_Mul(fid, gid, name, v_arr):
	v = IntArrayContainer(v_arr.size)
	v.set(v_arr)
	ier = _iric.cg_iRIC_Write_Sol_Particle_Integer_WithGridId_Mul(fid, gid, name, v)
	_checkErrorCode(ier)

def cg_iRIC_Read_Sol_ParticleGroup_Pos2d_WithGridId_Mul(fid, gid, step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId_Mul(fid, gid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos2d_WithGridId_Mul(fid, gid, step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_ParticleGroup_Pos3d_WithGridId_Mul(fid, gid, step, groupname):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId_Mul(fid, gid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	z = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Pos3d_WithGridId_Mul(fid, gid, step, groupname, x, y, z)
	_checkErrorCode(ier)
	return x.get(), y.get(), z.get()

def cg_iRIC_Read_Sol_ParticleGroup_Real_WithGridId_Mul(fid, gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId_Mul(fid, gid, step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Real_WithGridId_Mul(fid, gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_ParticleGroup_Integer_WithGridId_Mul(fid, gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_ParticleGroup_Count_WithGridId_Mul(fid, gid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_ParticleGroup_Integer_WithGridId_Mul(fid, gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Pos2d_WithGridId_Mul(fid, gid, step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_CoordinateCount_WithGridId_Mul(fid, gid, step, groupname)
	x = RealArrayContainer(size)
	y = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Pos2d_WithGridId_Mul(fid, gid, step, groupname, x, y)
	_checkErrorCode(ier)
	return x.get(), y.get()

def cg_iRIC_Read_Sol_PolyData_Type_WithGridId_Mul(fid, gid, step, groupname):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId_Mul(fid, gid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Type_WithGridId_Mul(fid, gid, step, groupname, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Real_WithGridId_Mul(fid, gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId_Mul(fid, gid, step, groupname)
	v = RealArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Real_WithGridId_Mul(fid, gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Read_Sol_PolyData_Integer_WithGridId_Mul(fid, gid, step, groupname, name):
	size = cg_iRIC_Read_Sol_PolyData_DataCount_WithGridId_Mul(fid, gid, step, groupname)
	v = IntArrayContainer(size)
	ier = _iric.cg_iRIC_Read_Sol_PolyData_Integer_WithGridId_Mul(fid, gid, step, groupname, name, v)
	_checkErrorCode(ier)
	return v.get()

def cg_iRIC_Write_Sol_PolyData_Polygon_WithGridId_Mul(fid, gid, numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polygon_WithGridId_Mul(fid, gid, numPoints, x, y)
	_checkErrorCode(ier)

def cg_iRIC_Write_Sol_PolyData_Polyline_WithGridId_Mul(fid, gid, numPoints, x_arr, y_arr):
	x = RealArrayContainer(x_arr.size)
	x.set(x_arr)
	y = RealArrayContainer(y_arr.size)
	y.set(y_arr)
	ier = _iric.cg_iRIC_Write_Sol_PolyData_Polyline_WithGridId_Mul(fid, gid, numPoints, x, y)
	_checkErrorCode(ier)


