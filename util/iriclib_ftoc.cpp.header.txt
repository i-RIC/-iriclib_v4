//#define NAME_MAXLENGTH 200
#include "fortran_macros.h"
#include <string.h>

#include "iriclib.h"
#include "iriclib_errorcodes.h"

#define STRINGMAXLEN 2048

/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *\
 *      Convert between Fortran and C strings                            *
\* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

static void string_2_C_string(char *string, int string_length,
    char *c_string, int max_len, int *ierr) {
    int i, iend;

    if (string == nullptr || c_string == nullptr) {
        *ierr = IRIC_WRONG_POINTER;
        return;
    }

    /** Skip and trailing blanks **/
    for (iend = string_length-1; iend >= 0; iend--) {
        if (string[iend] != ' ') break;
    }
    if (iend >= max_len) iend = max_len - 1;

    /** Copy the non-trailing blank portion of the string **/
    for (i = 0; i <= iend; i++)
        c_string[i] = string[i];

    /** NULL terminate the C string **/
    c_string[i] = '\0';
    *ierr = IRIC_NO_ERROR;
}

static void string_2_F_string(char *c_string, char *string,
    int string_length, int *ierr) {
    int i;
    size_t len;

    if (c_string == nullptr || string == nullptr) {
        *ierr = IRIC_WRONG_POINTER;
        return;
    }
    len = strlen(c_string);
    if (len > string_length) len = string_length;

    for (i = 0; i < len; i++)
        string[i] = c_string[i];
    while (i < string_length)
        string[i++] = ' ';
    *ierr = IRIC_NO_ERROR;
}

extern "C" {
