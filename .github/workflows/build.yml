name: cmake-build

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  GENERATOR: 'Visual Studio 16 2019'
  SGEN: vs2019-x64
  HDF5_VER: 1.8.21
  POCO_VER: 1.9.4

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - name: Checkout iricdev
      uses: actions/checkout@v2
      with:
        repository: scharlton2/iricdev-2019
        ref: 2019_solver
                
    - name: Checkout iriclib
      uses: actions/checkout@v2
      with:
        path: lib/src/iriclib-git

    - name: Set file mtimes for msbuild
      run: |
        curl -L -O https://raw.githubusercontent.com/MestreLion/git-tools/cd87904e0b85d74b1d05f6acbd10553a0ceaceb0/git-restore-mtime
        python git-restore-mtime

    - name: Setup path for msbuild
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        vs-version: '[16.9,17)'

    - name: Export iriclib version
      run: |
        # update CMakeLists.txt version number for iriclib
        Set-Location .\lib\src\iriclib-git
        (Get-Content .\CMakeLists.txt) | Foreach-Object {
          if ($_ -match '  VERSION (?<major>0|[1-9]\d*)\.(?<minor>[0|1-9]\d*)\.(?<patch>[0|1-9]\d*)$') {
            $patch = 1 + $Matches['patch']
            $env:IRICLIB_VER = $Matches['major'] + "." + $Matches['minor'] + "." + $patch
            return "  VERSION " + $env:IRICLIB_VER
          }
          return $_
        } | Set-Content .\CMakeLists.txt
        echo "IRICLIB_VER=$env:IRICLIB_VER" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Setup programs
      run: Copy-Item .\programs_std.prop .\programs.prop

    - name: debug
      run: |
        Get-Command curl
        Write-Output ${{ env.HDF5_VER }}
        Get-Command cmake
        Write-Output ${{ env.POCO_VER }}
        Get-Command ctest
        Write-Output ${{ env.GENERATOR }}
        Get-Command 7z
        Write-Output ${{ env.YYY }}
        Get-Command msbuild
        Write-Output "key = ${{runner.os}}-build-poco-${{hashFiles('./poco.*')}}"
        Get-Command python

    - name: Cache poco
      id: cache-poco
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/lib/install/poco-${{env.POCO_VER}}
        key: ${{runner.os}}-build-poco-${{hashFiles('./poco.*')}}

    - name: Build poco
      if: steps.cache-poco.outputs.cache-hit != 'true'
      run: msbuild /noLogo /maxCpuCount /target:poco-build-release iricdev.proj

    - name: Cache hdf5
      id: cache-hdf5
      uses: actions/cache@v2
      with:
        path: ${{github.workspace}}/lib/install/hdf5-${{env.HDF5_VER}}
        key: ${{runner.os}}-build-hdf5-${{hashFiles('./hdf5.*')}}

    - name: Build hdf5
      if: steps.cache-hdf5.outputs.cache-hit != 'true'
      run: msbuild /noLogo /maxCpuCount /target:hdf5-build-release iricdev.proj

    - name: Build iriclib
      run: msbuild /noLogo /maxCpuCount /target:iriclib-build-2019 iricdev.proj

    - name: 7z sdk
      run: 7z a iricsdk.7z .\lib\install

    - name: Archive sdk
      uses: actions/upload-artifact@v2
      with:
        name: iricsdk
        path: lib/install
